[{"title":"javascript笔录","id":"8c7c4031e54f97dba0b7","articles":[{"title":"nodejs模块(CommonJS)与es6模块的区别","id":"fa55d32a37ff470c6dfa","mtime":1644891761675,"ctime":1644891305967,"desc":"CommonJS\n  CommonJS是由JavaScript社区在2009提出的包含模块、文件、IO、控制台在内的一系列标准。在Node.js的实现中采用CommonJS标准的一部分，并在它的基础上进行了一些调整。我们听说的CommonJS模块和Node.js中的实现并不完全一样，现在一般谈到Co"},{"title":"Proxy和Reflect","id":"d6de1bf5f0382cf53f5e","mtime":1644290431389,"ctime":1632734371528,"desc":"Proxy对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。Proxy被用于许多库和浏览器框架上，例如vue3就是使用Proxy来实现数据响应式的。本文带你了解Proxy的用法与局限性。\nProxy参数与说明\nconst target = {}\ncon"},{"title":"canvas与屏幕坐标的互相转换","id":"13494122c038a34839ac","mtime":1644290431389,"ctime":1632734610917,"desc":"最近在制作公司的一个项目时有运用到canvas与屏幕坐标互相转换的一个知识点，如果没有进行canvas缩放、旋转、平移一系列操作时，这个需求还是比较简单的，但是如果操作复杂起来后，要再进行转换，在不知道一些特定api就显得比较困难了，在查阅了了一些资料后解决了这个需求这里分享给大家。\n解决思路\n解决"},{"title":"JavaScript的宏任务与微任务","id":"7e8a295dcaf430c6fc9a","mtime":1644290431388,"ctime":1632734371528,"desc":"事件队列与事件循环\n  我们都知道JavaScript是一门单线程非阻塞的脚本语言，这意味着JavaScript在执行期间都是只有一个主线程来处理所有任务的。而非阻塞是指当代码有异步任务是，主线程会挂起这个异步任务，当这个异步任务执行完毕后，主线程才会在适当时期去执行这个任务的回调。  当异步任务处"},{"title":"使用操作符做标志管理","id":"9c6d734aa72e04e0f8dd","mtime":1636041429632,"ctime":1632734371528,"desc":"什么是标志？标志就是显示事物特征，便于识别的记号。在程序中我们通常使用枚举来表示标志，比如权限标志：\n// authorityFlag.js\n\n// 是否有查询权限\nconst QUERY = 1\n// 是否有更新权限\nconst UPDATE = 2\n// 是否有删除权限\nconst DELETE"}]},{"title":"vue3-reactivity源码解析","id":"94e7945213d9a62f838c","articles":[{"title":"vue3-effectScope源码解析","id":"b34c59f5badff2bc8427","mtime":1646295174627,"ctime":1646295167931,"desc":"阅读准备\n\n本文使用的vue版本为3.2.26。在阅读 effectScope 源码之前，我们需要知道它的特性，可以通过阅读单例测试源码或者是阅读官网的 API了解特性，推荐阅读单例，了解特性在后面阅读时才能更好理解。\n\n  在vue3中可以使用effectScope函数创建一个统一管理effect"},{"title":"vue3-computed源码解析","id":"b9bbb26eba4dacdc2312","mtime":1646275858685,"ctime":1646275630320,"desc":"阅读准备\n\n本文使用的vue版本为3.2.26。在阅读 computed 源码之前，我们需要知道它的特性，可以通过阅读单例测试源码或者是阅读官网的 API了解特性，推荐阅读单例，了解特性在后面阅读时才能更好理解。\n\n  在vue3中可以使用用户自定义的getter方法创建一个计算对象，计算对象通过."},{"title":"vue3-ref源码解析","id":"4838fc56a04f95936f16","mtime":1645176674132,"ctime":1644914753060,"desc":"阅读准备\n\n本文使用的vue版本为3.2.26。在阅读 ref 源码之前，我们需要知道它的特性，可以通过阅读单例测试源码或者是阅读官网的 API了解特性，推荐阅读单例，了解特性在后面阅读时才能更好理解。\n\n  我们前两章讲讲解了reactive 源码解析和effect 源码解析，并且知道了它们是如何"},{"title":"vue3-effect源码解析","id":"37495e00ab36e870f8dd","mtime":1644899449102,"ctime":1644899321378,"desc":"阅读准备\n\n本文使用的vue版本为3.2.26。在阅读 effect 源码之前，我们需要知道它的特性，可以通过阅读单例测试源码或者是阅读官网的 API了解特性，推荐阅读单例，了解特性在后面阅读时才能更好理解。\n\n  通过上一章vue3-reactive源码解析，可以猜想到，effect主要职责是存储"},{"title":"vue3-reactive源码解析","id":"6452d43210bfdd32fd3c","mtime":1644416825417,"ctime":1644415322115,"desc":"阅读准备\n\n本文使用的vue版本为3.2.26。在阅读 reactive 源码之前，我们需要知道它的特性，了解特性推荐阅读单例测试源码或者是阅读官网的 API，推荐阅读单例，在后面阅读时才能更好理解。vue中响应式数据是通过Proxy来实现的，可以通过我之前写的Proxy 和 Reflect来了解它"}]}]